<?php

/**
 * The module's static name.
 */
define('OOP', 'oop');

/**
 * The module's path.
 */
define('OOP_PATH', module_get_path('oop'));

module_load_include('inc', OOP, 'oop.cache');
module_load_include('inc', OOP, 'oop.functions');
module_load_include('inc', OOP, 'oop.factories');
module_load_include('inc', OOP, 'oop.invoke');

/**
 * Implements hook_menu().
 */
function oop_menu() {
  $items                          = array();
  $items['admin/config/oop']      = array(
    'title'            => 'Oop',
    'description'      => 'Oop',
    'type'             => MENU_NORMAL_ITEM,
    'page callback'    => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file path'        => drupal_get_path('module', 'system'),
    'file'             => 'system.admin.inc',
  );
  $items['admin/config/oop/test'] = array(
    'title'            => 'Oop test page',
    'type'             => MENU_NORMAL_ITEM,
    'page callback'    => 'oop_test',
    'access arguments' => array('access site configuration'),
  );

  return $items;
}

/**
 * Implements hook_admin_menu_cache_info().
 */
function oop_admin_menu_cache_info() {
  $caches[OOP] = array(
    'title'    => t('OOP'),
    'callback' => 'oop_cc_all',
  );

  return $caches;
}

/**
 * Cc all function.
 */
function oop_cc_all() {
  cache_clear_all('*', OOP_DB__CACHE, TRUE);
}

/**
 * Implements hook_flush_caches().
 */
function oop_flush_caches() {
  return array(OOP_DB__CACHE);
}

/**
 * Test function.
 */
function oop_test() {
  $generator = generator('entity_toolbox_info');
}

/**
 * Implements hook_class_info().
 */
function oop_class_info() {
  $info              = array();
  $info['templater'] = array(
    'safe'           => 'TemplaterBase',
    'class_'         => 'TemplaterBase',
    'base'           => 'TemplaterBase',
    'model'          => array(
      'class' => '%args%Templater',
      'args'  => array(
        'templater_sys_id'
      )
    ),
    'module'         => 'oop',
    'dependency dir' => 'templaters',
    'factory'        => 'templater',
  );
  $info['helper']    = array(
    'safe'           => 'HelperBase',
    'class_'         => 'HelperBase',
    'base'           => 'HelperBase',
    'model'          => array(
      'class' => '%args%Helper',
      'args'  => array(
        'type'
      )
    ),
    'module'         => 'oop',
    'dependency dir' => 'helpers',
    'factory'        => 'helper',
  );

  return $info;
}

/**
 * Implements hook_factory_info().
 */
function oop_factory_info() {
  $info              = array();
  $info['helper']    = array(
    'class' => 'HelperFactory',
    'file'  => array(
      'name' => 'HelperFactory',
      'dir'  => 'helpers',
    ),
  );
  $info['templater'] = array(
    'class' => 'TemplaterFactory',
    'file'  => array(
      'name' => 'TemplaterFactory',
      'dir'  => 'templaters',
    ),
  );

  return $info;
}

/**
 * Implements hook_trait_info().
 */
function oop_trait_info() {
  $info                              = array();
  $info['oop_common']                = array();
  $info['templating']                = array();
  $info['factory_controls']          = array();
  $info['class_dependent']           = array(
    'file' => array(
      'path' => paths_join(OOP_PATH, array('src', 'traits', 'dependencies'))
    )
  );
  $info['class_factoring_dependent'] = array(
    'file' => array(
      'path' => paths_join(OOP_PATH, array('src', 'traits', 'dependencies'))
    )
  );
  $info['templater_dependent']       = array(
    'file' => array(
      'path' => paths_join(OOP_PATH, array('src', 'traits', 'dependencies'))
    )
  );
  $info['module_dependent']          = array(
    'file' => array(
      'path' => paths_join(OOP_PATH, array('src', 'traits', 'dependencies'))
    )
  );
  $info['helper_dependent']          = array(
    'file' => array(
      'path' => paths_join(OOP_PATH, array(
        'src',
        'traits',
        'dependencies',
      ))
    )
  );

  return $info;
}